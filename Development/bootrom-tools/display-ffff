#! /usr/bin/python

#
# Copyright (c) 2015 Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 1. Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
# 3. Neither the name of the copyright holder nor the names of its
# contributors may be used to endorse or promote products derived from this
# software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

"""This script displays an FFFF header or file(s)"""

from __future__ import print_function
import sys
import argparse
from ffff_romimage import FfffRomimage
from util import error

# Program return values
PROGRAM_SUCCESS = 0
PROGRAM_WARNINGS = 1
PROGRAM_ERRORS = 2


def main():
    """Application for displaying Flash Format for Firmware (FFFF) files

    Usage: display-ffff {-x|--explode} {--map} file...
    Where:
        -x|--explode
            A debugging aid where each element is extracted to a separate
            file, sharing a common root name.
        --map
            Create a map file of the FFFF headers and each TFTF sections
       file A list of FFFF files to display
    """
    parser = argparse.ArgumentParser()
    prog_status = PROGRAM_SUCCESS

    # Flags args
    parser.add_argument("--explode", "-x",
                        help="Saves elements in separate files "
                             "with same root name")

    parser.add_argument("--map", "-m",
                        action='store_true',
                        help="displays the field offsets")

    # non-keyword args
    parser.add_argument("files",
                        metavar='N',
                        nargs='+',
                        help="adds more detail")

    args = parser.parse_args()

    if len(args.files) < 1:
        error("Missing files to display")
        return PROGRAM_ERRORS

    # Walk the list of files
    for f in args.files:
        ffff_romimage = FfffRomimage()
        if not ffff_romimage.init_from_file(f):
            print("There were errors", file=sys.stderr)
            prog_status = PROGRAM_ERRORS
        else:
            ffff_romimage.display(f)
            if args.explode:
                print("Extracting element(s) from FFFF file:")
                ffff_romimage.explode(args.explode)
            if args.map:
                try:
                    ffff_romimage.create_map_file(f, 0)
                except:
                    error("unable to create map file")
                    raise
        ffff_romimage = None

    return prog_status

## Launch main
#
if __name__ == '__main__':
    main()
